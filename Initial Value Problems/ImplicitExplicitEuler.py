# -*- coding: utf-8 -*-
"""Euler_Implicito_Explicito.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QKnpDOZPZTOsEcRoL6BhGVmS9f3cg3m0
"""

#PVI-2 DADOS
t0 = 0
v0 = 5 #m/s
y0 = 200 #m
k = 0.25 #kg/s
m = 2 #kg
g = 10 #m/s^2
deltaT = 0.1 #dt vai variar de 0.1 a 0.0001

#calcularemos os valores da altura maxima, tempo total, tempo ate a altura maxima etc
def eulerExplicito(t0 , v0 , y0 , k , m , g , deltaT ):
  #s_0 = [ v0 , y0 ]
  tempo_total = 0
  h_max = y0
  t_h_max = 0
  y1 = y0
  while y1 > 0:
    v1 = v0 + deltaT*(-g -(k/m)*v0)
    y1 = y0 + deltaT*v0
    
    #atualizar valores para proximo passo
    v0 = v1 
    y0 = y1
    tempo_total = tempo_total + deltaT
    if y1>h_max:
      h_max = y1
      t_h_max = tempo_total
  s = [v1,y1,tempo_total,h_max,t_h_max]
  return s


def eulerImplicito(t0 , v0 , y0 , k , m , g , deltaT ):
  #s_0 = [ v0 , y0 ]
  #tempo_total = 0
  
  y1 = y0
  while y1 > 0:
    #isolando v1, pondo na forma explicita:
    v1 = (v0 + deltaT*(-g))/ (1+deltaT*(k/m))
    y1 = y0 + deltaT*((v0 + deltaT*(-g))/ (1+deltaT*(k/m)))
    
    #atualizar valores para proximo passo
    v0 = v1 
    y0 = y1
    #tempo_total = tempo_total + deltaT
  s = [v1,y1]
  return s

vetor0 = eulerExplicito(t0,v0,y0,k,m,g,deltaT) #para deltaT = 0.1
vetor1 = eulerExplicito(t0,v0,y0,k,m,g,deltaT/10) #para deltaT = 0.01
vetor2 = eulerExplicito(t0,v0,y0,k,m,g,deltaT/100) #para deltaT = 0.001
vetor3 = eulerExplicito(t0,v0,y0,k,m,g,deltaT/1000) #para deltaT = 0.0001


print("  deltaT |     Altura maxima   |   Tempo para h_max  |  Tempo total       |  Velocidade final")
print("  0.1    | ", vetor0[3],"|",vetor0[4],"                |",vetor0[2]," |",vetor0[0])
print("  0.01   | " ,vetor1[3]," |",vetor1[4],"|",vetor1[2]," |",vetor1[0])
print("  0.001  | ", vetor2[3],"  |",vetor2[4]," |",vetor2[2],"|",vetor2[0])
print("  0.0001 | ", vetor3[3],"|",vetor3[4]," |",vetor3[2]," |",vetor3[0])