# -*- coding: utf-8 -*-
"""Runge-Kutta.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zy6UkV4eEtuOFQ9iyiV4ZmiYuLnaIt1r
"""

#PVI-2 DADOS
t0 = 0
v0 = 5 #m/s
y0 = 200 #m
k = 0.25 #kg/s
m = 2 #kg
g = 10 #m/s^2
deltaT = 0.1

def RungeKutta(t0 , v0 , y0 , k , m , g , deltaT):
  tempo_total = 0
  h_max = y0
  t_h_max = 0

  while y0 > 0:
    #equacoes 47 a 52
    f1 = [-g-(k/m)*v0,v0]
    
    s_i_meio = [(v0 + (deltaT/2)*(f1[0])),(y0 + (deltaT/2)*(f1[1]))]

    f2 = [-g-(k/m)*s_i_meio[0],s_i_meio[0]]

    s_i_1 = [(v0 + (deltaT)*(-f1[0] + 2*f2[0] )),(y0 + (deltaT)*(-f1[1] + 2*f2[1]))]

    f3 = [-g-(k/m)*s_i_1[0],s_i_1[0]]
    #
    
    #att do estado s_i+1
    s1 = [(v0 + (deltaT)*((1/6)*f1[0] + (4/6)*f2[0] + (1/6)*f3[0])),(y0 + (deltaT)*((1/6)*f1[1] + (4/6)*f2[1] + (1/6)*f3[1]))]
    v0 = s1[0]
    y0 = s1[1]
    tempo_total = tempo_total + deltaT
    if y0>h_max:
      h_max = y0
      t_h_max = tempo_total

  vetor_sol = [s1[0],s1[1],tempo_total,t_h_max,h_max]
  return vetor_sol

print("deltaT |  Velocidade final   |    Tempo total    |   Tempo para h_max  | Altura maxima")
vetor0 = RungeKutta(t0 , v0 , y0 , k , m , g , deltaT)
vetor1 = RungeKutta(t0 , v0 , y0 , k , m , g , deltaT/10)
vetor2 = RungeKutta(t0 , v0 , y0 , k , m , g , deltaT/100)
vetor3 = RungeKutta(t0 , v0 , y0 , k , m , g , deltaT/1000)
print("   0.1 |",vetor0[0]," |", vetor0[2],"|", vetor0[3],"                |",vetor0[4])
print("  0.01 |",vetor1[0]," |", vetor1[2],"|", vetor1[3],"|",vetor1[4])
print(" 0.001 |",vetor2[0],"|", vetor2[2],"|", vetor2[3]," |",vetor2[4])
print("0.0001 |",vetor3[0]," |", vetor3[2],"|", vetor3[3]," |",vetor3[4])